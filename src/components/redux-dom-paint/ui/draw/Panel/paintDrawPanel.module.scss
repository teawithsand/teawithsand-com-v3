@use "@app/styles/scrollbar.scss" as scrollbar;
@use "@app/styles/defines.scss" as def;
@use "@app/styles/bs.scss" as bs;
@use "@app/styles/background.scss" as bg;

@use "sass:selector";

.panel {
	@include scrollbar.pretty-scrollbar(transparent, black);
	box-sizing: border-box;

	width: 100%;
	height: 100%;

	overflow: auto;

	$steps: 10;
	$offset: 120;
	$limit: 300;
	$colors: null;
	@for $i from 0 through $steps {
		$colors: append(
			$colors,
			hsl(calc($offset + (($limit - $offset) / $steps) * $i), 100%, 75%),
			$separator: comma
		);
	}

	background: white;
	background: linear-gradient(360deg - 45deg, $colors);

	display: grid;
	grid-template-columns: auto;
	grid-auto-flow: row;
	grid-auto-rows: min-content;

	$left-right-padding: map-get(def.$spacers, 2);
	$top-bottom-padding: map-get(def.$spacers, 2);

	> * {
		padding: $top-bottom-padding $left-right-padding;
		margin-bottom: map-get(def.$spacers, 2);
	}

	> *::after {
		content: "";
		border-bottom: 3px dashed black;
		padding-bottom: $top-bottom-padding;
		margin-left: calc($left-right-padding / 2 * -1);
		margin-right: calc($left-right-padding / 2 * -1);
	}

	> *:last-child::after {
		margin-bottom: 0;
		border-bottom: 0px;
		border-bottom: 0px solid transparent;
	}

	> *:first-child {
		margin-top: 0;
	}
}

.section {
	display: grid;
	grid-template-columns: 1fr;
	grid-auto-flow: row;
	grid-auto-rows: auto;

	row-gap: map-get(def.$spacers, 2);

	&__top-title {
		text-align: center;
		font-size: 2rem;
	}

	&__title {
		text-align: center;
		font-size: 1.5rem;
	}

	&__info-text {
		font-size: 1.2rem;
		font-weight: normal;
	}

	&__info-text-list {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	&__main-button {
		@extend .btn;
		@extend .btn-primary;
		width: 100%;
	}

	&__header-button {
		@extend .btn;
		@extend .btn-dark;
		@extend .btn-lg;

		width: 100%;
		margin-bottom: map-get(def.$spacers, 2);
	}

	&__button-bar {
		@extend .btn-group;
		width: 100%;

		> * {
			@extend .btn;
			@extend .btn-primary;
		}
	}

	@mixin unify-parent($child) {
		@at-root #{selector.unify(&, $child)} {
			@content;
		}
	}

	&__input-container {
		& input[type="range"] {
			@extend .form-range;
		}
		& input[type="text"],
		& input[type="number"] {
			@extend .form-control;
		}

		@include unify-parent("textarea") {
			@extend .form-control;
		}
	}
}

.color-showcase {
	display: grid;
	grid-template-columns: max-content min-content minmax(20px, auto);
	grid-auto-rows: 1fr;

	column-gap: map-get(def.$spacers, 2);
	row-gap: map-get(def.$spacers, 2);

	overflow: hidden;

	&__description {
		grid-column: 1;
		display: block;
		margin: auto 0;
	}

	&__picker {
		grid-column: 2;
		display: block;
		margin: auto 0;
	}

	&__element {
		grid-column: 3;
		display: block;

		width: 100%;
		height: 100%;
		border-radius: 10000px; // a lot px

		@include bg.opaque-tile-background();

		border: 2px solid black;

		&::after {
			content: "";
			background-color: var(--showcase-color);
			border-radius: 10000px; // a lot px
			width: 100%;
			height: 100%;
			display: block;
		}
	}
}

.panel-form {
	
}