@use "@app/styles/scrollbar.scss" as scrollbar;
@use "@app/styles/defines.scss" as def;
@use "@app/styles/bs.scss" as bs;
@use "@app/styles/background.scss" as bg;
@use "@app/styles/animation.scss" as animation;

.draw-container {
	display: grid;
	grid-template-columns: 100vw;
	grid-template-rows: 100vh;

	width: 100vw;
	height: 100vh;

	overflow: hidden;
}

.toggle-button {
	grid-row: 1;
	grid-column: 1;
	z-index: 2;

	width: fit-content;
	height: fit-content;

	margin-top: map-get(def.$spacers, 3);
	margin-right: map-get(def.$spacers, 3);
	margin-left: auto;
	margin-bottom: auto;

	@extend .btn;
	@extend .btn-primary;
}

.main-display {
	z-index: 1;	
	grid-row: 1;
	grid-column: 1;

	@include bg.opaque-tile-background();
	touch-action: none;

	width: 100%;
	height: 100%;

	// hide overflow
	// even though scrolling will be still performed
	// just programmatically, rather than by user using scrollbars
	overflow: hidden;

	// Note: this is required due to bug in FF, which causes buttons
	// in the panel not to be clickable for the first time.
	// in other words: even though there is no element here, since it's cropped
	// with overflow scrollbars, first click event(actually some other pointer/mouse event) goes to
	// underlying canvas, even though it does not exist here, because it was cropped with overflow bars
	// This behavior is exclusive to firefox. Chrome handles that well.
	overflow: clip;

	> * {
		background-color: white;
		border: 2px dashed black;
	}
}

.side-panel {
	z-index: 3;
	grid-row: 1;
	grid-column: 1;

	overflow: hidden; // required for animation to work properly
	margin-left: auto;
}

.panel-animation {
	@include animation.animation-slide-out(300ms);
}
