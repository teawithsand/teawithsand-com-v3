@use "@app/styles/scrollbar.scss" as scrollbar;
@use "@app/styles/defines.scss" as def;
@use "@app/styles/bs.scss" as bs;
@use "@app/styles/background.scss" as bg;

.draw-container {
	display: grid;
	grid-template-columns: minmax(max-content, auto) fit-content;
	grid-template-rows: minmax(auto, 100vh);

	width: 100vw;
	height: 100vh;

	overflow: hidden;

	&__main-display {
		touch-action: none;

		@include bg.opaque-tile-background();

		grid-row: 1;
		grid-column: 1;

		width: 100%;
		height: 100%;
	
		// hide overflow
		// even though scrolling will be still performed
		// just programmatically, rather than by user using scrollbars
		overflow: hidden;

		// Note: this is required due to bug in FF, which causes buttons 
		// in the panel not to be clickable for the first time.
		// in other words: even though there is no element here, since it's cropped 
		// with overflow scrollbars, first click event(actually some other pointer/mouse event) goes to
		// underlying canvas, even though it does not exist here, because it was cropped with overflow bars
		// This behavior is exclusive to firefox. Chrome handles that well.
		overflow: clip;
	
		> * {
			background-color: white;
			border: 2px dashed black;
		}
	}	

	&__side-panel {
		grid-row: 1;
		grid-column: 2;

		overflow: hidden; // required for animation to work properly
	}

	&__toggle-panel {
		grid-row: 1;
		grid-column: 1;

		margin: map-get(def.$spacers, 2) map-get(def.$spacers, 3);

		margin-left: auto;
		margin-bottom: auto;

		@extend .btn;
		@extend .btn-primary;
	}
}



@mixin move-out-styles($width) {
    $move-out-duration: 500ms;

	.move-out-appear {
		// width: $width;

		width: $width;
	}

	.move-out-enter {
		// width: 0;

		width: $width;
		transform: translateX($width);
	}

	.move-out-enter-active {
		// width: $width;
		// transition: width $move-out-duration;

		width: $width;
		transition: transform $move-out-duration;
		transform: translateX(0);
	}

	.move-out-enter-done {
		// width: $width;

		width: $width;
		transform: translateX(0);
	}

	.move-out-exit {
		// width: $width;

		width: $width;
		transform: translateX(0);
		transition: transform $move-out-duration;
	}

	.move-out-exit-active {
		// width: 0;
		// transition: width $move-out-duration;

		width: $width;
		transform: translateX($width);
	}
}


@include move-out-styles(100vw);

@include bs.media-breakpoint-up(md) { 
    @include move-out-styles(Max(50vw, 200px));
}

@include bs.media-breakpoint-up(lg) { 
    @include move-out-styles(Max(20vw, 500px));
}

.move-out-exit-done {
	width: 0;
	padding: 0;
	margin: 0;
}
