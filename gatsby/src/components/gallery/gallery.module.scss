@use "@app/styles/defines.scss" as def;
@use "@app/styles/scrollbar.scss" as scrollbar;

// Required, otherwise webkit(safari/chrome) will display blurry images while downscaling
//  on the other hand, in firefox it works ok as-is
//  BTW I also noticed that it changes depending on image used
//  while lena scales ok
//  this weeb sh*t picture
//  https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/Wikipe-tan_in_Different_Anime_Styles.png/1024px-Wikipe-tan_in_Different_Anime_Styles.png
//  Works best with image-rendering: auto on ff
//  and with -webkit-optimize-contrast on chrome
@mixin downscaled-image {
	// See
	// https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering
	image-rendering: auto;
	image-rendering: -webkit-optimize-contrast;
	// see comments above
	// image-rendering: smooth;
	// image-rendering: high-quality;
}

$bottom-bar-height: 200px;

$gallery-row-gap: map-get(def.$spacers, 2);
$gallery-padding: map-get(def.$spacers, 2);
$gallery-max-height: 100vh;

$main-row-max-height: calc(
	$gallery-max-height - $bottom-bar-height - scrollbar.$height -
		$gallery-row-gap - $gallery-padding
);

.gallery {
	display: grid;
	grid-template-columns: minmax(auto, 100vw);
	grid-template-rows:
		minmax(
			max-content,
			$main-row-max-height
		)
		$bottom-bar-height;

	background-color: black;
	color: white;

	row-gap: $gallery-row-gap;
	padding: $gallery-padding;

	user-select: none;
	::selection {
		background: transparent;
	}
}

.main-bar {
	overflow: hidden;
	grid-row: 1;
	grid-column: 1;

	display: grid;
	grid-template-columns: auto;
	grid-template-rows: auto;

	width: 100%;
	height: 100%;
    // For some reason this row won't obey to minmax's max part
    // computed using calc
    // but adding this 
    // makes it work
    max-height: $main-row-max-height;

	&__displayed-entry-wrapper {
		z-index: 0;
		grid-row: 1;
		grid-column: 1;

		overflow: hidden;

		width: 100%;
		height: 100%;

		margin: auto;

		img {
			@include downscaled-image();
			width: fit-content;
			height: fit-content;
			max-width: 100%;
			max-height: 100%;
			object-fit: contain;
		}
	}

	&__hidden-elements {
		z-index: 0;
		grid-row: 1;
		grid-column: 1;

		display: grid;
		visibility: hidden;
		overflow: hidden;

		width: 100%;
		height: 100%;

		> * {
			grid-row: 1;
			grid-column: 1;

			width: 100%;
			height: 100%;
		}

		img {
			@include downscaled-image();
			width: fit-content;
			height: fit-content;
			max-width: 100%;
			max-height: 100%;
			object-fit: contain;
		}
	}

	$overlay-width: 33%;

	// TODO(teawithsand): use less hacky solutions like svg images instead
	// of ::before content and flexbox for centering.
	@mixin overlay {
		grid-row: 1;
		grid-column: 1;
		width: $overlay-width;
		background-color: rgba(255, 255, 255, 0.3);

		box-sizing: border-box;
		height: 100%;

		text-align: center;

		overflow: hidden;
		display: flex;
		align-items: center;
		justify-content: center;
		vertical-align: middle;
		text-align: center;

		font-size: 20em;

		transition: opacity 300ms;
		opacity: 0;
		z-index: 1;

		// TODO(teawithsand): fix centering arrows
		// looks like text is not centered to baseline but to
		// it's top instead
		//
		// Or do it like normal person would do
		// and just use svg
		//
		// But I am too lazy to use svg
		// :3
		font-family: monospace, monospace;

		&:hover {
			opacity: 1;
		}
	}

	&__left-overlay {
		@include overlay();
		margin-right: auto;

		&::before {
			content: "←";
		}
	}

	&__right-overlay {
		@include overlay();
		margin-left: auto;

		&::before {
			content: "→";
		}
	}
}

.bottom-bar {
	@include scrollbar.pretty-scrollbar-light();

	height: $bottom-bar-height;
	overflow-x: scroll;
	overflow-y: hidden;

	margin-left: auto;
	margin-right: auto;

	grid-row: 2;
	grid-column: 1;

	display: grid;
	grid-template-rows: 1fr;
	grid-auto-columns: max-content;
	grid-auto-flow: column;

	column-gap: map-get(def.$spacers, 2);

	&__entry-wrapper {
		overflow: hidden;

		border: 1px solid white;
		border-radius: map-get(def.$spacers, 1);

		height: 100%;
		max-width: 33vw;

		img {
			@include downscaled-image();
			width: fit-content;
			height: fit-content;
			max-width: 100%;
			max-height: 100%;
			object-fit: cover;
		}
	}
}

.main-element-display {
}
